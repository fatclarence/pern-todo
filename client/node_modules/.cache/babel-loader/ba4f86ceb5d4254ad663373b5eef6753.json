{"ast":null,"code":"var _jsxFileName = \"/Users/clarencekoh/Desktop/pern-todo/client/src/components/EditTodo.js\";\nimport React, { Fragment, useState } from \"react\"; // Must DESTRUCTURE the prop\n// For each todo, return a unique edit button\n// that reveals a modal when clicked\n\nconst EditTodo = ({\n  todo\n}) => {\n  const [description, setDescription] = useState(todo.description); // Edit description function\n\n  const updateDescription = async e => {\n    // Prevent reload of browser before function call on click\n    e.preventDefault();\n\n    try {\n      const body = {\n        description\n      };\n      const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-warning\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": `#id${todo.todo_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    id: `id${todo.todo_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Edit Todo\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    onClick: () => setDescription({\n      description\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-warning\",\n    \"data-dismiss\": \"modal\",\n    onClick: e => updateDescription(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Close\"))))));\n};\n\nexport default EditTodo;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/components/EditTodo.js"],"names":["React","Fragment","useState","EditTodo","todo","description","setDescription","updateDescription","e","preventDefault","body","response","fetch","todo_id","method","headers","JSON","stringify","window","location","err","console","error","message","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\n// Must DESTRUCTURE the prop\n// For each todo, return a unique edit button\n// that reveals a modal when clicked\nconst EditTodo = ({ todo }) => {\n    const [description, setDescription] = useState(todo.description);\n\n    // Edit description function\n    const updateDescription = async(e) => {\n        // Prevent reload of browser before function call on click\n        e.preventDefault();\n        try {\n            const body = { description };\n            const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            window.location = \"/\";\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n    return (\n        <Fragment>\n            <button type=\"button\" className=\"btn btn-warning\" \n            data-toggle=\"modal\" \n            data-target={`#id${todo.todo_id}`}>\n                Edit\n            </button>\n\n            <div className=\"modal\" id={`id${todo.todo_id}`}>\n            <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n\n            <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Edit Todo</h4>\n                <button type=\"button\" \n                    className=\"close\" \n                    data-dismiss=\"modal\"\n                    onClick={() => setDescription({description})}    \n                >\n                    &times;\n                </button>\n            </div>\n\n            <div className=\"modal-body\">\n                <input type=\"text\" \n                    className=\"form-control\" \n                    value={description}\n                    onChange={e => setDescription(e.target.value)}\n                >\n                </input>\n            </div>\n\n            <div className=\"modal-footer\">\n                <button type=\"button\" \n                    className=\"btn btn-warning\" \n                    data-dismiss=\"modal\"\n                    onClick={e => updateDescription(e)}\n                >\n                    Edit\n                </button>\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n                    Close\n                </button>\n            </div>\n\n            </div>\n            </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default EditTodo;\n"]},"metadata":{},"sourceType":"module"}