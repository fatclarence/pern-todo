{"ast":null,"code":"import _regeneratorRuntime from\"/Users/clarencekoh/Desktop/pern-todo/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/clarencekoh/Desktop/pern-todo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/clarencekoh/Desktop/pern-todo/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from\"react\";// Must DESTRUCTURE the prop\n// For each todo, return a unique edit button\n// that reveals a modal when clicked\nvar EditTodo=function EditTodo(_ref){var todo=_ref.todo;var _useState=useState(todo.description),_useState2=_slicedToArray(_useState,2),description=_useState2[0],setDescription=_useState2[1];// Edit description function\nvar updateDescription=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var body,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Prevent reload of browser before function call on click\ne.preventDefault();_context.prev=1;body={description:description};_context.next=5;return fetch(\"http://localhost:5000/todos/\".concat(todo.todo_id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});case 5:response=_context.sent;window.location=\"/\";_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.error(_context.t0.message);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function updateDescription(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-warning\",\"data-toggle\":\"modal\",\"data-target\":\"#id\".concat(todo.todo_id)},\"Edit\"),/*#__PURE__*/React.createElement(\"div\",{className:\"modal\",id:\"id\".concat(todo.todo_id),onClick:function onClick(){return setDescription(todo.description);}},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"modal-title\"},\"Edit Todo\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"close\",\"data-dismiss\":\"modal\",onClick:function onClick(){return setDescription(todo.description);}},\"\\xD7\")),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",value:description,onChange:function onChange(e){return setDescription(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-warning\",\"data-dismiss\":\"modal\",onClick:function onClick(e){return updateDescription(e);}},\"Edit\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger\",\"data-dismiss\":\"modal\",onClick:function onClick(){return setDescription(todo.description);}},\"Close\"))))));};export default EditTodo;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/components/EditTodo.js"],"names":["React","Fragment","useState","EditTodo","todo","description","setDescription","updateDescription","e","preventDefault","body","fetch","todo_id","method","headers","JSON","stringify","response","window","location","console","error","message","target","value"],"mappings":"uXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA;AACA;AACA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,eACWF,QAAQ,CAACE,IAAI,CAACC,WAAN,CADnB,wCACpBA,WADoB,eACPC,cADO,eAG3B;AACA,GAAMC,CAAAA,iBAAiB,2FAAG,iBAAMC,CAAN,oIACtB;AACAA,CAAC,CAACC,cAAF,GAFsB,gBAIZC,IAJY,CAIL,CAAEL,WAAW,CAAXA,WAAF,CAJK,uBAKKM,CAAAA,KAAK,uCAAgCP,IAAI,CAACQ,OAArC,EAAgD,CACxEC,MAAM,CAAE,KADgE,CAExEC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF+D,CAGxEJ,IAAI,CAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAHkE,CAAhD,CALV,QAKZO,QALY,eAUlBC,MAAM,CAACC,QAAP,CAAkB,GAAlB,CAVkB,+EAYlBC,OAAO,CAACC,KAAR,CAAc,YAAIC,OAAlB,EAZkB,oEAAH,kBAAjBf,CAAAA,iBAAiB,6CAAvB,CAeA,mBACI,oBAAC,QAAD,mBACI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,iBAAhC,CACA,cAAY,OADZ,CAEA,2BAAmBH,IAAI,CAACQ,OAAxB,CAFA,SADJ,cAQI,2BAAK,SAAS,CAAC,OAAf,CAAuB,EAAE,aAAOR,IAAI,CAACQ,OAAZ,CAAzB,CAAgD,OAAO,CAAE,yBAAMN,CAAAA,cAAc,CAACF,IAAI,CAACC,WAAN,CAApB,EAAzD,eACA,2BAAK,SAAS,CAAC,cAAf,eACA,2BAAK,SAAS,CAAC,eAAf,eAEA,2BAAK,SAAS,CAAC,cAAf,eACI,0BAAI,SAAS,CAAC,aAAd,cADJ,cAEI,8BAAQ,IAAI,CAAC,QAAb,CACI,SAAS,CAAC,OADd,CAEI,eAAa,OAFjB,CAGI,OAAO,CAAE,yBAAMC,CAAAA,cAAc,CAACF,IAAI,CAACC,WAAN,CAApB,EAHb,SAFJ,CAFA,cAYA,2BAAK,SAAS,CAAC,YAAf,eACI,6BAAO,IAAI,CAAC,MAAZ,CACI,SAAS,CAAC,cADd,CAEI,KAAK,CAAEA,WAFX,CAGI,QAAQ,CAAE,kBAAAG,CAAC,QAAIF,CAAAA,cAAc,CAACE,CAAC,CAACe,MAAF,CAASC,KAAV,CAAlB,EAHf,EADJ,CAZA,cAoBA,2BAAK,SAAS,CAAC,cAAf,eACI,8BAAQ,IAAI,CAAC,QAAb,CACI,SAAS,CAAC,iBADd,CAEI,eAAa,OAFjB,CAGI,OAAO,CAAE,iBAAAhB,CAAC,QAAID,CAAAA,iBAAiB,CAACC,CAAD,CAArB,EAHd,SADJ,cAOI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,gBAAhC,CACA,eAAa,OADb,CAEA,OAAO,CAAE,yBAAMF,CAAAA,cAAc,CAACF,IAAI,CAACC,WAAN,CAApB,EAFT,UAPJ,CApBA,CADA,CADA,CARJ,CADJ,CAkDH,CArED,CAuEA,cAAeF,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\n// Must DESTRUCTURE the prop\n// For each todo, return a unique edit button\n// that reveals a modal when clicked\nconst EditTodo = ({ todo }) => {\n    const [description, setDescription] = useState(todo.description);\n\n    // Edit description function\n    const updateDescription = async(e) => {\n        // Prevent reload of browser before function call on click\n        e.preventDefault();\n        try {\n            const body = { description };\n            const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            window.location = \"/\";\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n    return (\n        <Fragment>\n            <button type=\"button\" className=\"btn btn-warning\" \n            data-toggle=\"modal\" \n            data-target={`#id${todo.todo_id}`}>\n                Edit\n            </button>\n            {/* Put onClick within the div with className modal for any additional functionality\n            you want to have when you click outside the modal*/}\n            <div className=\"modal\" id={`id${todo.todo_id}`} onClick={() => setDescription(todo.description)}>\n            <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n\n            <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Edit Todo</h4>\n                <button type=\"button\" \n                    className=\"close\" \n                    data-dismiss=\"modal\"\n                    onClick={() => setDescription(todo.description)}    >\n                    &times;\n                </button>\n            </div>\n\n            <div className=\"modal-body\">\n                <input type=\"text\" \n                    className=\"form-control\" \n                    value={description}\n                    onChange={e => setDescription(e.target.value)}>\n                </input>\n            </div>\n\n            <div className=\"modal-footer\">\n                <button type=\"button\" \n                    className=\"btn btn-warning\" \n                    data-dismiss=\"modal\"\n                    onClick={e => updateDescription(e)}>\n                    Edit\n                </button>\n                <button type=\"button\" className=\"btn btn-danger\" \n                data-dismiss=\"modal\" \n                onClick={() => setDescription(todo.description)}>\n                    Close\n                </button>\n            </div>\n\n            </div>\n            </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default EditTodo;\n"]},"metadata":{},"sourceType":"module"}