{"ast":null,"code":"var _jsxFileName = \"/Users/clarencekoh/Desktop/pern-todo/client/src/components/ListTodos.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport EditTodo from \"./EditTodo\";\nimport InputTodo from \"./InputTodo\";\n\nconst ListTodos = () => {\n  // State and what you are using to change the state\n  const [todos, setTodos] = useState([]); // Delete function\n\n  const deleteTodo = async (id, description) => {\n    try {\n      const deleteTodo = await fetch(`/api/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n      toast.warning(\"Deleted todo \\\"\" + description + \"\\\"\");\n      getTodos();\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      // grab data from server, fetch is a get request\n      const response = await fetch(\"/api/todos\"); // Have to parse because receiving json data\n\n      const jsonData = await response.json(); // Set the state of todos on the client side to whatever was fetched during the first render\n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    // every refresh render, execute these functions\n    getTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputTodo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.todo_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, todo.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(EditTodo, {\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteTodo(todo.todo_id, todo.description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Delete\")))))));\n};\n\nexport default ListTodos;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/components/ListTodos.js"],"names":["React","Fragment","useEffect","useState","toast","EditTodo","InputTodo","ListTodos","todos","setTodos","deleteTodo","id","description","fetch","method","filter","todo","todo_id","warning","getTodos","err","console","error","message","response","jsonData","json","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport EditTodo from \"./EditTodo\";\nimport InputTodo from \"./InputTodo\";\n\nconst ListTodos = () => {\n    // State and what you are using to change the state\n    const[todos, setTodos] = useState([]);\n\n    // Delete function\n    const deleteTodo = async(id, description) => {\n        try {\n            const deleteTodo = await fetch(`/api/todos/${id}`, {\n                 method: \"DELETE\"\n            });\n            setTodos(todos.filter(todo => \n                todo.todo_id !== id\n            ));\n            toast.warning(\"Deleted todo \\\"\" + description + \"\\\"\");\n            getTodos();\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n\n    const getTodos = async() => {\n        try {\n            // grab data from server, fetch is a get request\n            const response = await fetch(\"/api/todos\");\n            // Have to parse because receiving json data\n            const jsonData = await response.json();\n            // Set the state of todos on the client side to whatever was fetched during the first render\n            setTodos(jsonData);\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        // every refresh render, execute these functions\n        getTodos();\n    }, []);\n\n    return (\n        <Fragment>\n            <InputTodo />\n            <table className=\"table mt-5 text-center\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Edit</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {todos.map(todo => (\n                        <tr key={todo.todo_id}>\n                            <td>{todo.description}</td>\n                            <td><EditTodo todo={todo} /></td>\n                            <td><button className=\"btn btn-danger\" onClick={() => deleteTodo(todo.todo_id, todo.description)}>Delete</button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </Fragment>\n    );\n}\n\nexport default ListTodos;"]},"metadata":{},"sourceType":"module"}