{"ast":null,"code":"var _jsxFileName = \"/Users/clarencekoh/Desktop/pern-todo/client/src/utils/UserProvider.js\";\nimport React, { useState, useEffect, createContext } from \"react\";\nexport const UserContext = createContext({}); // Wrapper for simple authentication \n\nfunction UserProvider(props) {\n  const [username, setUsername] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedToken = localStorage.getItem(\"token\");\n    console.log(\"Current username: \" + storedUsername);\n    console.log(\"Current token: \" + storedToken);\n    setUsername(storedUsername);\n    setToken(storedToken);\n  }, []);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      username,\n      token,\n      setUsername: username => {\n        setUsername(username);\n\n        if (username) {\n          console.log(\"USERCONTEXT: \" + username);\n          localStorage.setItem(\"username\", username);\n        } else {\n          localStorage.removeItem(\"username\");\n        }\n      },\n      setToken: token => {\n        setToken(token);\n\n        if (token) {\n          console.log(\"USERCONTEXT: \" + token);\n          localStorage.setItem(\"token\", token);\n        } else {\n          localStorage.removeItem(\"token\", token);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, props.children);\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/utils/UserProvider.js"],"names":["React","useState","useEffect","createContext","UserContext","UserProvider","props","username","setUsername","token","setToken","storedUsername","localStorage","getItem","storedToken","console","log","setItem","removeItem","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,WAAW,GAAGD,aAAa,CAAC,EAAD,CAAjC,C,CAEP;;AACA,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAvB;AACA,UAAMC,WAAW,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBL,cAAlC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAmBF,WAA/B;AACAN,IAAAA,WAAW,CAACG,cAAD,CAAX;AACAD,IAAAA,QAAQ,CAACI,WAAD,CAAR;AACH,GARQ,EAQN,EARM,CAAT;AAWA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACP,MAAAA,QAAD;AACCE,MAAAA,KADD;AAEGD,MAAAA,WAAW,EAAED,QAAQ,IAAI;AACrBC,QAAAA,WAAW,CAACD,QAAD,CAAX;;AACA,YAAIA,QAAJ,EAAc;AACVQ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBT,QAA9B;AACAK,UAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCV,QAAjC;AACH,SAHD,MAGO;AACHK,UAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACH;AACJ,OAVJ;AAWGR,MAAAA,QAAQ,EAAED,KAAK,IAAI;AACfC,QAAAA,QAAQ,CAACD,KAAD,CAAR;;AACA,YAAIA,KAAJ,EAAW;AACPM,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBP,KAA9B;AACAG,UAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACH,SAHD,MAGO;AACHG,UAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB,EAAiCT,KAAjC;AACH;AACJ;AAnBJ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBKH,KAAK,CAACa,QAtBX,CADJ;AA0BH;;AAGD,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nexport const UserContext = createContext({});\n\n// Wrapper for simple authentication \nfunction UserProvider(props) {\n    const [username, setUsername] = useState(null);\n    const [token, setToken] = useState(null);\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem(\"username\");\n        const storedToken = localStorage.getItem(\"token\");\n\n        console.log(\"Current username: \"+ storedUsername);\n        console.log(\"Current token: \"+ storedToken);\n        setUsername(storedUsername);\n        setToken(storedToken);\n    }, []);\n\n\n    return (\n        <UserContext.Provider value={{username, \n                                      token, \n                                        setUsername: username => {\n                                            setUsername(username);\n                                            if (username) {\n                                                console.log(\"USERCONTEXT: \" + username);\n                                                localStorage.setItem(\"username\", username);\n                                            } else {\n                                                localStorage.removeItem(\"username\");\n                                            }\n                                        }, \n                                        setToken: token => {\n                                            setToken(token);\n                                            if (token) {\n                                                console.log(\"USERCONTEXT: \" + token);\n                                                localStorage.setItem(\"token\", token);\n                                            } else {\n                                                localStorage.removeItem(\"token\", token);\n                                            }\n                                        }\n        }}>\n        \n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\n\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}