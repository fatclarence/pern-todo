{"ast":null,"code":"import _slicedToArray from\"/Users/clarencekoh/Desktop/pern-todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createContext}from\"react\";export var UserContext=createContext({});// Wrapper for simple authentication \nfunction UserProvider(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),username=_useState2[0],_setUsername=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),token=_useState4[0],_setToken=_useState4[1];useEffect(function(){var storedUsername=localStorage.getItem(\"username\");var storedToken=localStorage.getItem(\"token\");console.log(\"Current username: \"+storedUsername);console.log(\"Current token: \"+storedToken);_setUsername(storedUsername);_setToken(storedToken);},[]);return/*#__PURE__*/React.createElement(UserContext.Provider,{value:{username:username,token:token,setUsername:function setUsername(username){_setUsername(username);if(username){console.log(\"USERCONTEXT: \"+username);localStorage.setItem(\"username\",username);}else{localStorage.removeItem(\"username\");}},setToken:function setToken(token){_setToken(token);if(token){console.log(\"USERCONTEXT: \"+token);localStorage.setItem(\"token\",token);}else{localStorage.removeItem(\"token\",token);}}}},props.children);}export default UserProvider;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/utils/UserProvider.js"],"names":["React","useState","useEffect","createContext","UserContext","UserProvider","props","username","setUsername","token","setToken","storedUsername","localStorage","getItem","storedToken","console","log","setItem","removeItem","children"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,aAArC,KAA0D,OAA1D,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGD,aAAa,CAAC,EAAD,CAAjC,CAEP;AACA,QAASE,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,eACOL,QAAQ,CAAC,IAAD,CADf,wCAClBM,QADkB,eACRC,YADQ,8BAECP,QAAQ,CAAC,IAAD,CAFT,yCAElBQ,KAFkB,eAEXC,SAFW,eAIzBR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,cAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAvB,CACA,GAAMC,CAAAA,WAAW,CAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB,CAEAE,OAAO,CAACC,GAAR,CAAY,qBAAsBL,cAAlC,EACAI,OAAO,CAACC,GAAR,CAAY,kBAAmBF,WAA/B,EACAN,YAAW,CAACG,cAAD,CAAX,CACAD,SAAQ,CAACI,WAAD,CAAR,CACH,CARQ,CAQN,EARM,CAAT,CAWA,mBACI,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACP,QAAQ,CAARA,QAAD,CACCE,KAAK,CAALA,KADD,CAEGD,WAAW,CAAE,qBAAAD,QAAQ,CAAI,CACrBC,YAAW,CAACD,QAAD,CAAX,CACA,GAAIA,QAAJ,CAAc,CACVQ,OAAO,CAACC,GAAR,CAAY,gBAAkBT,QAA9B,EACAK,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAiCV,QAAjC,EACH,CAHD,IAGO,CACHK,YAAY,CAACM,UAAb,CAAwB,UAAxB,EACH,CACJ,CAVJ,CAWGR,QAAQ,CAAE,kBAAAD,KAAK,CAAI,CACfC,SAAQ,CAACD,KAAD,CAAR,CACA,GAAIA,KAAJ,CAAW,CACPM,OAAO,CAACC,GAAR,CAAY,gBAAkBP,KAA9B,EACAG,YAAY,CAACK,OAAb,CAAqB,OAArB,CAA8BR,KAA9B,EACH,CAHD,IAGO,CACHG,YAAY,CAACM,UAAb,CAAwB,OAAxB,CAAiCT,KAAjC,EACH,CACJ,CAnBJ,CAA7B,EAsBKH,KAAK,CAACa,QAtBX,CADJ,CA0BH,CAGD,cAAed,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nexport const UserContext = createContext({});\n\n// Wrapper for simple authentication \nfunction UserProvider(props) {\n    const [username, setUsername] = useState(null);\n    const [token, setToken] = useState(null);\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem(\"username\");\n        const storedToken = localStorage.getItem(\"token\");\n\n        console.log(\"Current username: \"+ storedUsername);\n        console.log(\"Current token: \"+ storedToken);\n        setUsername(storedUsername);\n        setToken(storedToken);\n    }, []);\n\n\n    return (\n        <UserContext.Provider value={{username, \n                                      token, \n                                        setUsername: username => {\n                                            setUsername(username);\n                                            if (username) {\n                                                console.log(\"USERCONTEXT: \" + username);\n                                                localStorage.setItem(\"username\", username);\n                                            } else {\n                                                localStorage.removeItem(\"username\");\n                                            }\n                                        }, \n                                        setToken: token => {\n                                            setToken(token);\n                                            if (token) {\n                                                console.log(\"USERCONTEXT: \" + token);\n                                                localStorage.setItem(\"token\", token);\n                                            } else {\n                                                localStorage.removeItem(\"token\", token);\n                                            }\n                                        }\n        }}>\n        \n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\n\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}