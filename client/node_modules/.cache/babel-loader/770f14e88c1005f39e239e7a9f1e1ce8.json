{"ast":null,"code":"import _objectWithoutProperties from\"/Users/clarencekoh/Desktop/pern-todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect,useContext}from\"react\";import ROUTES from\"./Routes\";import{Route,Redirect}from\"react-router-dom\";import{UserContext}from\"../utils/UserProvider\";export var PublicRoute=function PublicRoute(_ref){var path=_ref.path,Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"path\",\"component\"]);var _useContext=useContext(UserContext),username=_useContext.username,token=_useContext.token;// const [auth, setAuth] = useState(null);\n// useEffect(() => {\n//     if(username && token) {\n//         // setAuth({ username: username, token: token }); \n//     }\n// }, [username, token]);\nvar isAuthenticated=function isAuthenticated(){return username!=null&&token!=null;};return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{path:path,render:function render(props){return!isAuthenticated()?/*#__PURE__*/React.createElement(Component,props):/*#__PURE__*/React.createElement(Redirect,{to:ROUTES.TODOLIST});}}));};export default PublicRoute;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/routes/PublicRoute.js"],"names":["React","useState","useEffect","useContext","ROUTES","Route","Redirect","UserContext","PublicRoute","path","Component","component","rest","username","token","isAuthenticated","props","TODOLIST"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CAEA,OAASC,WAAT,KAA4B,uBAA5B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA6C,IAA1CC,CAAAA,IAA0C,MAA1CA,IAA0C,CAAzBC,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,qEACxCT,UAAU,CAACI,WAAD,CAD8B,CAC5DM,QAD4D,aAC5DA,QAD4D,CAClDC,KADkD,aAClDA,KADkD,CAGpE;AAEA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAMF,CAAAA,QAAQ,EAAI,IAAZ,EAAoBC,KAAK,EAAI,IAAnC,EAAxB,CAEA,mBACI,oBAAC,KAAD,kBAAWF,IAAX,EAAiB,IAAI,CAAIH,IAAzB,CACI,MAAM,CAAI,gBAAAO,KAAK,QAAI,CAACD,eAAe,EAAhB,cAAsB,oBAAC,SAAD,CAAeC,KAAf,CAAtB,cACqB,oBAAC,QAAD,EAAU,EAAE,CAAEZ,MAAM,CAACa,QAArB,EADzB,EADnB,GADJ,CAMH,CAnBM,CAqBP,cAAeT,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../utils/UserProvider\";\n\nexport const PublicRoute = ({ path, component: Component, ...rest }) => {\n    const { username, token } = useContext(UserContext);\n\n    // const [auth, setAuth] = useState(null);\n\n    // useEffect(() => {\n    //     if(username && token) {\n    //         // setAuth({ username: username, token: token }); \n    //     }\n    // }, [username, token]);\n\n    const isAuthenticated = () => username != null && token != null;\n\n    return (\n        <Route {...rest} path = {path}\n            render = {props => !isAuthenticated() ? (<Component {...props} />)\n                                                 : (<Redirect to={ROUTES.TODOLIST} />)}\n        />\n    )\n}\n\nexport default PublicRoute;"]},"metadata":{},"sourceType":"module"}