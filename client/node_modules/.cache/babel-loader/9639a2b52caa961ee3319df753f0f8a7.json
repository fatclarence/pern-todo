{"ast":null,"code":"var _jsxFileName = \"/Users/clarencekoh/Desktop/pern-todo/client/src/routes/PrivateRoute.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { UserContext } from \"../utils/UserProvider\";\nimport Todos from \"../pages/Todos\";\n\nconst PrivateRoute = props => {\n  const {\n    username,\n    token\n  } = useContext(UserContext); // const [auth, setAuth] = useState(null);\n  // useEffect(() => {\n  //     if(username && token) {\n  //         setAuth({ username, token });\n  //         // console.log(auth);\n  //     }\n  // }, [username, token]);\n\n  const isAuthenticated = () => username != null && token != null;\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    render: props => isAuthenticated() ? /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: ROUTES.TODOLIST,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 73\n      }\n    }, \"yo\"))) : /*#__PURE__*/React.createElement(Redirect, {\n      to: ROUTES.LOGIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/routes/PrivateRoute.js"],"names":["React","useState","useEffect","useContext","ROUTES","Route","Redirect","Switch","UserContext","Todos","PrivateRoute","props","username","token","isAuthenticated","TODOLIST","LOGIN"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBV,UAAU,CAACK,WAAD,CAAtC,CAD4B,CAG5B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMM,eAAe,GAAG,MAAMF,QAAQ,IAAI,IAAZ,IAAoBC,KAAK,IAAI,IAA3D;;AAEA,sBACI,oBAAC,KAAD,oBAAWF,KAAX;AAAkB,IAAA,MAAM,EAAEA,KAAK,IAC3BG,eAAe,kBACK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEV,MAAM,CAACW,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApC,CADJ,CADL,gBAII,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEX,MAAM,CAACY,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH,CAvBD;;AAyBA,eAAeN,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport { UserContext } from \"../utils/UserProvider\";\nimport Todos from \"../pages/Todos\";\n\nconst PrivateRoute = (props) => {\n    const { username, token } = useContext(UserContext);\n\n    // const [auth, setAuth] = useState(null);\n\n    // useEffect(() => {\n    //     if(username && token) {\n    //         setAuth({ username, token });\n    //         // console.log(auth);\n    //     }\n    // }, [username, token]);\n\n    const isAuthenticated = () => username != null && token != null;\n\n    return (\n        <Route {...props} render={props => \n            isAuthenticated() ? (\n                                <Switch>\n                                    <Route exact path={ROUTES.TODOLIST}><div>yo</div></Route>\n                                </Switch>)\n                            : (<Redirect to={ROUTES.LOGIN} />)\n        } />\n    );\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}