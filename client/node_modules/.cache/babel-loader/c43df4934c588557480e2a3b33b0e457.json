{"ast":null,"code":"import React,{useState,useEffect,useContext}from\"react\";import ROUTES from\"./Routes\";import{Route,Redirect,Switch}from\"react-router-dom\";import{UserContext}from\"../utils/UserProvider\";import Todos from\"../pages/Todos\";var PrivateRoute=function PrivateRoute(props){var _useContext=useContext(UserContext),username=_useContext.username,token=_useContext.token;// const [auth, setAuth] = useState(null);\n// useEffect(() => {\n//     if(username && token) {\n//         setAuth({ username, token });\n//         // console.log(auth);\n//     }\n// }, [username, token]);\nvar isAuthenticated=function isAuthenticated(){return username!=null&&token!=null;};return/*#__PURE__*/React.createElement(Route,Object.assign({},props,{render:function render(props){return isAuthenticated()?/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:ROUTES.TODOLIST},/*#__PURE__*/React.createElement(Todos,null))):/*#__PURE__*/React.createElement(Redirect,{to:ROUTES.LOGIN});}}));};export default PrivateRoute;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/routes/PrivateRoute.js"],"names":["React","useState","useEffect","useContext","ROUTES","Route","Redirect","Switch","UserContext","Todos","PrivateRoute","props","username","token","isAuthenticated","TODOLIST","LOGIN"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,KAAT,CAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,kBAAxC,CAEA,OAASC,WAAT,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,iBACAR,UAAU,CAACK,WAAD,CADV,CACpBI,QADoB,aACpBA,QADoB,CACVC,KADU,aACVA,KADU,CAG5B;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAMF,CAAAA,QAAQ,EAAI,IAAZ,EAAoBC,KAAK,EAAI,IAAnC,EAAxB,CAEA,mBACI,oBAAC,KAAD,kBAAWF,KAAX,EAAkB,MAAM,CAAE,gBAAAA,KAAK,QAC3BG,CAAAA,eAAe,gBACK,oBAAC,MAAD,mBACI,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAEV,MAAM,CAACW,QAA1B,eAAoC,oBAAC,KAAD,MAApC,CADJ,CADL,cAII,oBAAC,QAAD,EAAU,EAAE,CAAEX,MAAM,CAACY,KAArB,EALQ,EAA/B,GADJ,CASH,CAvBD,CAyBA,cAAeN,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport { UserContext } from \"../utils/UserProvider\";\nimport Todos from \"../pages/Todos\";\n\nconst PrivateRoute = (props) => {\n    const { username, token } = useContext(UserContext);\n\n    // const [auth, setAuth] = useState(null);\n\n    // useEffect(() => {\n    //     if(username && token) {\n    //         setAuth({ username, token });\n    //         // console.log(auth);\n    //     }\n    // }, [username, token]);\n\n    const isAuthenticated = () => username != null && token != null;\n\n    return (\n        <Route {...props} render={props => \n            isAuthenticated() ? (\n                                <Switch>\n                                    <Route exact path={ROUTES.TODOLIST}><Todos /></Route>\n                                </Switch>)\n                            : (<Redirect to={ROUTES.LOGIN} />)\n        } />\n    );\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}