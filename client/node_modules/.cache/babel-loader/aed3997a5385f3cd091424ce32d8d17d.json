{"ast":null,"code":"var _jsxFileName = \"/Users/clarencekoh/Desktop/pern-todo/client/src/routes/PublicRoute.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../utils/UserProvider\";\nexport const PublicRoute = ({\n  path,\n  component: Component,\n  ...rest\n}) => {\n  const {\n    username,\n    token\n  } = useContext(UserContext);\n  const [auth, setAuth] = useState(null);\n  useEffect(data => {\n    console.log(\"data: \" + data);\n\n    if (username && token) {\n      setAuth({\n        username,\n        token\n      });\n    }\n  }, [username, token]);\n\n  const isAuthenticated = () => auth != null;\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    path: path,\n    render: props => !isAuthenticated() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 54\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: ROUTES.TODOLIST,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n};\nexport default PublicRoute;","map":{"version":3,"sources":["/Users/clarencekoh/Desktop/pern-todo/client/src/routes/PublicRoute.js"],"names":["React","useState","useEffect","useContext","ROUTES","Route","Redirect","UserContext","PublicRoute","path","component","Component","rest","username","token","auth","setAuth","data","console","log","isAuthenticated","props","TODOLIST"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAS,EAAEC,SAAnB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AACpE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBX,UAAU,CAACI,WAAD,CAAtC;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAEe,IAAD,IAAU;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,IAAvB;;AACA,QAAGJ,QAAQ,IAAIC,KAAf,EAAsB;AAClBE,MAAAA,OAAO,CAAC;AAAEH,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAD,CAAP;AACH;AACJ,GALQ,EAKN,CAACD,QAAD,EAAWC,KAAX,CALM,CAAT;;AAOA,QAAMM,eAAe,GAAG,MAAML,IAAI,IAAI,IAAtC;;AAEA,sBACI,oBAAC,KAAD,oBAAWH,IAAX;AAAiB,IAAA,IAAI,EAAIH,IAAzB;AACI,IAAA,MAAM,EAAIY,KAAK,IAAI,CAACD,eAAe,EAAhB,gBAAsB,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAtB,gBACqB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEjB,MAAM,CAACkB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CApBM;AAsBP,eAAed,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../utils/UserProvider\";\n\nexport const PublicRoute = ({ path, component: Component, ...rest }) => {\n    const { username, token } = useContext(UserContext);\n\n    const [auth, setAuth] = useState(null);\n\n    useEffect((data) => {\n        console.log(\"data: \" + data);\n        if(username && token) {\n            setAuth({ username, token }); \n        }\n    }, [username, token]);\n\n    const isAuthenticated = () => auth != null;\n\n    return (\n        <Route {...rest} path = {path}\n            render = {props => !isAuthenticated() ? (<Component {...props} />)\n                                                 : (<Redirect to={ROUTES.TODOLIST} />)}\n        />\n    )\n}\n\nexport default PublicRoute;"]},"metadata":{},"sourceType":"module"}