{"version":3,"sources":["utils/UserProvider.js","pages/Register.js","pages/Login.js","routes/PublicRoute.js","components/InputTodo.js","components/EditTodo.js","components/ListTodos.js","pages/Todos.js","routes/PrivateRoute.js","routes/AppRouter.js","App.js","index.js","routes/Routes.js"],"names":["UserContext","createContext","UserProvider","props","useState","username","setUsername","token","setToken","useEffect","storedUsername","localStorage","getItem","storedToken","console","log","Provider","value","setItem","removeItem","children","Register","useContext","setContextUsername","email","password","confirmPassword","inputs","setInputs","handleChange","event","target","name","handleSubmit","a","preventDefault","body","axios","post","then","response","data","toast","success","catch","error","Container","className","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","Button","to","ROUTES","LOGIN","Login","setPassword","e","REGISTER","PublicRoute","path","Component","component","rest","render","TODOLIST","InputTodo","description","setDescription","onSubmitForm","fetch","method","headers","JSON","stringify","message","EditTodo","todo","updateDescription","todo_id","window","location","data-toggle","data-target","id","onClick","data-dismiss","ListTodos","todos","getTodos","setTodos","deleteTodo","filter","warning","map","key","Todos","json","jsonData","PrivateRoute","exact","AppRouter","App","ReactDOM","StrictMode","document","getElementById","module","exports","HOME"],"mappings":"4PAEaA,EAAcC,wBAAc,IA+C1BC,MA5Cf,SAAsBC,GAAQ,IAAD,EACOC,mBAAS,MADhB,mBAClBC,EADkB,KACRC,EADQ,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAezB,OAXAC,qBAAU,WACN,IAAMC,EAAiBC,aAAaC,QAAQ,YACtCC,EAAcF,aAAaC,QAAQ,SAEzCE,QAAQC,IAAI,qBAAsBL,GAClCI,QAAQC,IAAI,kBAAmBF,GAC/BP,EAAYI,GACZF,EAASK,KACV,IAIC,kBAACb,EAAYgB,SAAb,CAAsBC,MAAO,CAACZ,WACAE,QACED,YAAa,SAAAD,GACTC,EAAYD,GACRA,GACAS,QAAQC,IAAI,gBAAkBV,GAC9BM,aAAaO,QAAQ,WAAYb,IAEjCM,aAAaQ,WAAW,aAGhCX,SAAU,SAAAD,GACNC,EAASD,GACLA,GACAO,QAAQC,IAAI,gBAAkBR,GAC9BI,aAAaO,QAAQ,QAASX,IAE9BI,aAAaQ,WAAW,QAASZ,MAKpEJ,EAAMiB,W,wICmGJC,EArIE,WAAO,IAAD,EAEEC,qBAAWtB,GADVuB,EADH,EACXjB,YACAE,EAFW,EAEXA,SAFW,EAKSJ,mBAAS,CACjCC,SAAU,GACVmB,MAAO,GACPC,SAAU,GACVC,gBAAiB,KATF,mBAKZC,EALY,KAKJC,EALI,KAafvB,EAIAsB,EAJAtB,SACAmB,EAGAG,EAHAH,MACAC,EAEAE,EAFAF,SACAC,EACAC,EADAD,gBAIEG,EAAe,SAAAC,GACjBF,EAAU,2BACHD,GADE,kBAEJG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOd,UAIpCgB,EAAY,uCAAG,WAAMH,GAAN,eAAAI,EAAA,sDACjBJ,EAAMK,iBAEAC,EAAO,CACT/B,WACAmB,QACAC,WACAC,mBAGJW,IAAMC,KAAK,qBAAsBF,GAC5BG,MAAK,SAAAC,GAAa,IACPC,EAASD,EAATC,KAERlB,EAAmBkB,EAAKpC,UACxBG,EAASiC,EAAKlC,OACdmC,IAAMC,QAAQ,yBAA2BF,EAAKpC,SAAW,QAE5DuC,OAAM,SAAAC,GACHH,IAAMG,MAAMA,EAAML,SAASC,KAAKI,UAGxC/B,QAAQC,IAAR,4BAAiCV,EAAjC,kBAAmDmB,IAtBlC,2CAAH,sDAyBlB,OAEK,6BACG,kBAACsB,EAAA,EAAD,CAAWC,UAAU,QACjB,wCACA,kBAACC,EAAA,EAAD,CAAMD,UAAU,YAAYE,SAAUhB,GAClC,kBAACe,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,qBAC3B,kBAACL,EAAA,EAAKM,MAAN,CAAYP,UAAU,aAAaQ,QAAM,EAACC,GAAG,KAA7C,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACR,EAAA,EAAKU,QAAN,CACIC,KAAK,OACLC,YAAY,WACZ3C,MAAOZ,EACP2B,KAAK,WACL6B,SAAUhC,MAKtB,kBAACmB,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,kBAC3B,kBAACL,EAAA,EAAKM,MAAN,CAAYP,UAAU,aAAaQ,QAAM,EAACC,GAAG,KAA7C,UAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACR,EAAA,EAAKU,QAAN,CACIC,KAAK,QACLC,YAAY,oBACZ3C,MAAOO,EACPQ,KAAK,QACL6B,SAAUhC,MAKtB,kBAACmB,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,qBAC3B,kBAACL,EAAA,EAAKM,MAAN,CAAYP,UAAU,aAAaQ,QAAM,EAACC,GAAG,KAA7C,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACR,EAAA,EAAKU,QAAN,CACIC,KAAK,WACLC,YAAY,WACZ3C,MAAOQ,EACPO,KAAK,WACL6B,SAAUhC,MAKtB,kBAACmB,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,qBAC3B,kBAACL,EAAA,EAAKM,MAAN,CAAYP,UAAU,aAAaQ,QAAM,EAACC,GAAG,KAA7C,qBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACR,EAAA,EAAKU,QAAN,CACIC,KAAK,WACLC,YAAY,mBACZ3C,MAAOS,EACPM,KAAK,kBACL6B,SAAUhC,MAKtB,kBAACiC,EAAA,EAAD,CAAQf,UAAU,kBAAkBY,KAAK,UAAzC,aAIJ,kEAEI,kBAAC,IAAD,CAAMI,GAAIC,IAAOC,OAAjB,YClDLC,EA1ED,WAAM,MAGK5C,qBAAWtB,GADVuB,EAFN,EAERjB,YACAE,EAHQ,EAGRA,SAHQ,EAKgBJ,mBAAS,IALzB,mBAKTC,EALS,KAKCC,EALD,OAMgBF,mBAAS,IANzB,mBAMTqB,EANS,KAMC0C,EAND,KAQVlC,EAAY,uCAAG,WAAMH,GAAN,eAAAI,EAAA,sDACjBJ,EAAMK,iBACAC,EAAO,CAAE/B,WAAUoB,YACzBY,IAAMC,KAAK,kBAAmBF,GACzBG,MAAK,SAAAC,GAAa,IACPC,EAASD,EAATC,KACR3B,QAAQC,IAAI0B,EAAKlC,OACjBO,QAAQC,IAAI0B,EAAKpC,UACjBG,EAASiC,EAAKlC,OACdgB,EAAmBkB,EAAKpC,UACxBqC,IAAMC,QAAQ,gBAAkBF,EAAKpC,aAExCuC,OAAM,SAAAC,GACHH,IAAMG,MAAMA,EAAML,SAASC,KAAKI,UAGxC/B,QAAQC,IAAR,oCAAyCV,IAhBxB,2CAAH,sDAmBlB,OAAQ,6BACA,kBAACyC,EAAA,EAAD,CAAWC,UAAU,QACjB,qCACA,kBAACC,EAAA,EAAD,CAAMD,UAAU,YAAYE,SAAUhB,GAClC,kBAACe,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,qBAC3B,kBAACL,EAAA,EAAKM,MAAN,CAAYP,UAAU,aAAaQ,QAAM,EAACC,GAAG,KAA7C,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACR,EAAA,EAAKU,QAAN,CACIC,KAAK,OACLC,YAAY,WACZ3C,MAAOZ,EACPwD,SAAU,SAAAO,GAAC,OAAI9D,EAAY8D,EAAErC,OAAOd,YAKhD,kBAAC+B,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,qBAC3B,kBAACL,EAAA,EAAKM,MAAN,CAAYP,UAAU,aAAaQ,QAAM,EAACC,GAAG,KAA7C,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,MACJ,kBAACR,EAAA,EAAKU,QAAN,CACIC,KAAK,WACLC,YAAY,WACZ3C,MAAOQ,EACPoC,SAAU,SAAAO,GAAC,OAAID,EAAYC,EAAErC,OAAOd,YAKhD,kBAAC6C,EAAA,EAAD,CAAQf,UAAU,kBAAkBY,KAAK,UAAzC,YAIJ,iEAEI,kBAAC,IAAD,CAAMI,GAAIC,IAAOK,UAAjB,Y,QC/CLC,EArBY,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAiBC,EAAyB,EAApCC,UAAyBC,EAAW,sCACxCpD,qBAAWtB,GAA/BK,EAD4D,EAC5DA,SAAUE,EADkD,EAClDA,MAYlB,OACI,kBAAC,IAAD,iBAAWmE,EAAX,CAAiBH,KAAQA,EACrBI,OAAU,SAAAxE,GAAK,OAJmB,MAAZE,GAA6B,MAATE,EAID,kBAACiE,EAAcrE,GAChB,kBAAC,IAAD,CAAU4D,GAAIC,IAAOY,gBCmB1DC,EAtCG,WAAO,IAAD,EACkBzE,mBAAS,IAD3B,mBACb0E,EADa,KACAC,EADA,KAEdC,EAAY,uCAAG,WAAMZ,GAAN,eAAAlC,EAAA,6DACjBkC,EAAEjC,iBADe,SAIPC,EAAO,CAAE0C,eAJF,SAMUG,MAAM,aAAc,CACvCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B/C,KAAMgD,KAAKC,UAAUjD,KATZ,cAWbM,IAAMC,QAAQ,yCAXD,gDAcb7B,QAAQ+B,MAAM,KAAIyC,SAClB5C,IAAMG,MAAM,4DAfC,yDAAH,sDAoBlB,OACA,kBAAC,WAAD,KACI,wBAAIE,UAAU,oBAAd,cACA,0BAAMA,UAAU,cAAcE,SAAU+B,GACpC,2BACArB,KAAK,OACLZ,UAAU,eACV9B,MAAO6D,EACPjB,SAAU,SAAAO,GAAC,OAAIW,EAAeX,EAAErC,OAAOd,UAEvC,4BAAQ8B,UAAU,mBAAlB,UCyCGwC,EAvEE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACWpF,mBAASoF,EAAKV,aADzB,mBACpBA,EADoB,KACPC,EADO,KAIrBU,EAAiB,uCAAG,WAAMrB,GAAN,eAAAlC,EAAA,6DAEtBkC,EAAEjC,iBAFoB,SAIZC,EAAO,CAAE0C,eAJG,SAKKG,MAAM,cAAD,OAAeO,EAAKE,SAAW,CACvDR,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3B/C,KAAMgD,KAAKC,UAAUjD,KARP,cAUlBuD,OAAOC,SAAW,IAVA,gDAYlB9E,QAAQ+B,MAAM,KAAIyC,SAZA,yDAAH,sDAevB,OACI,kBAAC,WAAD,KACI,4BAAQ3B,KAAK,SAASZ,UAAU,kBAChC8C,cAAY,QACZC,cAAA,aAAmBN,EAAKE,UAFxB,QAOA,yBAAK3C,UAAU,QAAQgD,GAAE,YAAOP,EAAKE,SAAWM,QAAS,kBAAMjB,EAAeS,EAAKV,eACnF,yBAAK/B,UAAU,gBACf,yBAAKA,UAAU,iBAEf,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAd,aACA,4BAAQY,KAAK,SACTZ,UAAU,QACVkD,eAAa,QACbD,QAAS,kBAAMjB,EAAeS,EAAKV,eAHvC,SAQJ,yBAAK/B,UAAU,cACX,2BAAOY,KAAK,OACRZ,UAAU,eACV9B,MAAO6D,EACPjB,SAAU,SAAAO,GAAC,OAAIW,EAAeX,EAAErC,OAAOd,WAI/C,yBAAK8B,UAAU,gBACX,4BAAQY,KAAK,SACTZ,UAAU,kBACVkD,eAAa,QACbD,QAAS,SAAA5B,GAAC,OAAIqB,EAAkBrB,KAHpC,QAMA,4BAAQT,KAAK,SAASZ,UAAU,iBAChCkD,eAAa,QACbD,QAAS,kBAAMjB,EAAeS,EAAKV,eAFnC,eCTDoB,EAjDG,SAAC,GAA6D,IAApDC,EAAmD,EAA1DA,MAAwBC,EAAkC,EAA5CA,SAA4C,IAAxBC,gBAAwB,MAAfA,EAAe,EAKrEC,EAAU,uCAAG,WAAMP,EAAIjB,GAAV,SAAA5C,EAAA,+EAEc+C,MAAM,cAAD,OAAec,GAAM,CAC9Cb,OAAQ,WAHF,cAKXmB,EAASF,EAAMI,QAAO,SAAAf,GAAI,OACtBA,EAAKE,UAAYK,MAErBrD,IAAM8D,QAAQ,iBAAoB1B,EAAc,KARrC,gDAWXhE,QAAQ+B,MAAM,KAAIyC,SAXP,yDAAH,wDAoBhB,OALA7E,qBAAU,WAEN2F,MACD,CAACD,IAGA,kBAAC,WAAD,KACI,2BAAOpD,UAAU,0BACb,+BACI,4BACI,2CACA,oCACA,wCAGR,+BACKoD,EAAMM,KAAI,SAAAjB,GAAI,OACX,wBAAIkB,IAAKlB,EAAKE,SACV,4BAAKF,EAAKV,aACV,4BAAI,kBAAC,EAAD,CAAUU,KAAMA,KACpB,4BAAI,4BAAQzC,UAAU,iBAAiBiD,QAAS,kBAAMM,EAAWd,EAAKE,QAASF,EAAKV,eAAhF,mBCVjB6B,EA7BD,WAAM,MAESvG,mBAAS,IAFlB,mBAEV+F,EAFU,KAEHE,EAFG,KAIVD,EAAQ,uCAAG,8BAAAlE,EAAA,+EAGc+C,MAAM,cAHpB,cAGHzC,EAHG,gBAKcA,EAASoE,OALvB,OAKHC,EALG,OAOTR,EAASQ,GAPA,kDAST/F,QAAQ+B,MAAM,KAAIyC,SATT,0DAAH,qDAkBd,OALA7E,qBAAU,WAEN2F,MACD,IAEK,yBAAKrD,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWoD,MAAOA,EAAOC,SAAUA,EAAUC,SAAUA,MCGxDS,EAzBM,SAAC3G,GAAW,IAAD,EACAmB,qBAAWtB,GAA/BK,EADoB,EACpBA,SAAUE,EADU,EACVA,MAalB,OACI,kBAAC,IAAD,iBAAWJ,EAAX,CAAkBwE,OAAQ,SAAAxE,GAAK,OAHO,MAAZE,GAA6B,MAATE,EAKtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwG,OAAK,EAACxC,KAAMP,IAAOY,UAAU,kBAAC,EAAD,QAEzC,kBAAC,IAAD,CAAUb,GAAIC,IAAOC,aCErC+C,EAhBG,WACd,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,OAAK,EAACxC,KAAK,IAAII,OAAQ,SAAAxE,GAAK,OAAI,kBAAC,IAAD,CAAU4D,GAAIC,IAAOC,WAC5D,kBAAC,EAAD,CAAaM,KAAMP,IAAOK,SAAU0C,OAAO,EAAMtC,UAAWpD,IAC5D,kBAAC,EAAD,CAAakD,KAAMP,IAAOC,MAAO8C,OAAO,EAAMtC,UAAWP,IACzD,kBAAC,EAAD,CAAcK,KAAMP,IAAOY,eCHhCqC,MAVf,WACE,OACA,6BACE,kBAAC,EAAD,KACG,kBAAC,EAAD,SCRPC,IAASvC,OACP,kBAAC,IAAMwC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,gBCD1BC,EAAOC,QAPQ,CACXtD,MAAO,SACPI,SAAU,YACVO,SAAU,aACV4C,KAAM,O","file":"static/js/main.9843ddb6.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nexport const UserContext = createContext({});\n\n// Wrapper for simple authentication \nfunction UserProvider(props) {\n    const [username, setUsername] = useState(null);\n    const [token, setToken] = useState(null);\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem(\"username\");\n        const storedToken = localStorage.getItem(\"token\");\n\n        console.log(\"Current username: \"+ storedUsername);\n        console.log(\"Current token: \"+ storedToken);\n        setUsername(storedUsername);\n        setToken(storedToken);\n    }, []);\n\n\n    return (\n        <UserContext.Provider value={{username, \n                                      token, \n                                        setUsername: username => {\n                                            setUsername(username);\n                                            if (username) {\n                                                console.log(\"USERCONTEXT: \" + username);\n                                                localStorage.setItem(\"username\", username);\n                                            } else {\n                                                localStorage.removeItem(\"username\");\n                                            }\n                                        }, \n                                        setToken: token => {\n                                            setToken(token);\n                                            if (token) {\n                                                console.log(\"USERCONTEXT: \" + token);\n                                                localStorage.setItem(\"token\", token);\n                                            } else {\n                                                localStorage.removeItem(\"token\", token);\n                                            }\n                                        }\n        }}>\n        \n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\n\nexport default UserProvider;","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nimport { UserContext } from \"../utils/UserProvider\";\nimport ROUTES from \"../routes/Routes\";\n\nconst Register = () => {\n    const { setUsername : setContextUsername, \n            setToken } = useContext(UserContext);\n\n    // Initialise input states of form\n    const [inputs, setInputs] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    });\n\n    const {\n        username,\n        email,\n        password,\n        confirmPassword\n    } = inputs;\n\n    // When fields change, apply changes to input variables\n    const handleChange = event => {\n        setInputs({\n            ...inputs,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        const body = {\n            username,\n            email,\n            password,\n            confirmPassword\n        };\n\n        axios.post(\"/api/auth/register\", body)\n            .then(response => {\n                const { data } = response;\n\n                setContextUsername(data.username);\n                setToken(data.token);\n                toast.success(\"Thanks for joining us \" + data.username + \"!\");\n            })\n            .catch(error => {\n                toast.error(error.response.data.error);\n            });\n\n        console.log(`Form submitted by ${username}, with ${email}`);\n    };\n\n    return (\n        //isAuthenticated ? <Redirect to={ROUTES.TODOLIST} />\n         <div>\n            <Container className=\"my-5\">\n                <h2>Register</h2>\n                <Form className=\"mt-4 mb-3\" onSubmit={handleSubmit}>\n                    <Form.Group as={Row} controlId=\"formPlainTextName\">\n                        <Form.Label className=\"text-right\" column sm=\"2\">\n                            Username:\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control \n                                type=\"text\"\n                                placeholder=\"Username\"\n                                value={username}\n                                name=\"username\"\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formPlainEmail\">\n                        <Form.Label className=\"text-right\" column sm=\"2\">\n                            Email:\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control \n                                type=\"email\"\n                                placeholder=\"email@example.com\"\n                                value={email}\n                                name=\"email\"\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formPlainPassword\">\n                        <Form.Label className=\"text-right\" column sm=\"2\">\n                            Password:\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control \n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={password}\n                                name=\"password\"\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formPlainPassword\">\n                        <Form.Label className=\"text-right\" column sm=\"2\">\n                            Confirm Password:\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control \n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                value={confirmPassword}\n                                name=\"confirmPassword\"\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Button className=\"btn btn-primary\" type=\"submit\">\n                        Register\n                    </Button>\n                </Form>\n                <p>\n                    Already have an account? Sign in&nbsp;\n                    <Link to={ROUTES.LOGIN}>\n                        here\n                    </Link>\n                </p>\n            </Container>\n        </div>\n    );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nimport { UserContext } from \"../utils/UserProvider\";\nimport ROUTES from \"../routes/Routes\";\n\nconst Login = () => {\n    // setContextUsername will change the state in the context (received from parent/ancestor component)\n    const { setUsername : setContextUsername,\n            setToken } = useContext(UserContext);\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        const body = { username, password };\n        axios.post(\"/api/auth/login\", body)\n            .then(response => {\n                const { data } = response;\n                console.log(data.token);\n                console.log(data.username);\n                setToken(data.token);\n                setContextUsername(data.username);\n                toast.success(\"Welcome Back \" + data.username);\n            })\n            .catch(error => {\n                toast.error(error.response.data.error);\n            });\n\n        console.log(`Sign in form submitted by ${username}`);\n    };\n\n    return (<div>\n            <Container className=\"my-5\">\n                <h2>Login</h2>\n                <Form className=\"mt-4 mb-3\" onSubmit={handleSubmit}>\n                    <Form.Group as={Row} controlId=\"formPlainTextName\">\n                        <Form.Label className=\"text-right\" column sm=\"2\">\n                            Username:\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Username\"\n                                value={username}\n                                onChange={e => setUsername(e.target.value)}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formPlainPassword\">\n                        <Form.Label className=\"text-right\" column sm=\"2\">\n                            Password:\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                            />\n                        </Col>\n                    </Form.Group> \n\n                    <Button className=\"btn btn-success\" type=\"submit\">\n                        Sign In\n                    </Button>\n                </Form>\n                <p>\n                    Don't have an account? Register&nbsp;\n                    <Link to={ROUTES.REGISTER}>\n                        NOW!\n                    </Link>\n                </p>\n            </Container>\n        </div>\n    )\n}\n\nexport default Login;","import React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../utils/UserProvider\";\n\nexport const PublicRoute = ({ path, component: Component, ...rest }) => {\n    const { username, token } = useContext(UserContext);\n\n    // const [auth, setAuth] = useState(null);\n\n    // useEffect(() => {\n    //     if(username && token) {\n    //         // setAuth({ username: username, token: token }); \n    //     }\n    // }, [username, token]);\n\n    const isAuthenticated = () => username != null && token != null;\n\n    return (\n        <Route {...rest} path = {path}\n            render = {props => !isAuthenticated() ? (<Component {...props} />)\n                                                 : (<Redirect to={ROUTES.TODOLIST} />)}\n        />\n    )\n}\n\nexport default PublicRoute;","import React, { Fragment, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst InputTodo = () => {\n    const [description, setDescription] = useState(\"\");\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n            // client input texts\n            const body = { description };\n            \n            const response = await fetch(\"/api/todos\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            toast.success(\"Successfully added to your todo list!\");\n            \n        } catch(err) {\n            console.error(err.message);\n            toast.error(\"There seems to be a problem here, do let Clarence know:)\");\n        }\n    };\n\n    // onChange here allows changing of input inside textbox\n    return (\n    <Fragment>\n        <h1 className=\"text-center mt-5\">Input Todo</h1>\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n            <input \n            type=\"text\" \n            className=\"form-control\" \n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            />\n            <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment> \n    );\n};\n\nexport default InputTodo;","import React, { Fragment, useState } from \"react\";\n\n// Must DESTRUCTURE the prop\n// For each todo, return a unique edit button\n// that reveals a modal when clicked\nconst EditTodo = ({ todo }) => {\n    const [description, setDescription] = useState(todo.description);\n\n    // Edit description function\n    const updateDescription = async(e) => {\n        // Prevent reload of browser before function call on click\n        e.preventDefault();\n        try {\n            const body = { description };\n            const response = await fetch(`/api/todos/${todo.todo_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            window.location = \"/\";\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n    return (\n        <Fragment>\n            <button type=\"button\" className=\"btn btn-warning\" \n            data-toggle=\"modal\" \n            data-target={`#id${todo.todo_id}`}>\n                Edit\n            </button>\n            {/* Put onClick within the div with className modal for any additional functionality\n            you want to have when you click outside the modal*/}\n            <div className=\"modal\" id={`id${todo.todo_id}`} onClick={() => setDescription(todo.description)}>\n            <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n\n            <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Edit Todo</h4>\n                <button type=\"button\" \n                    className=\"close\" \n                    data-dismiss=\"modal\"\n                    onClick={() => setDescription(todo.description)}    >\n                    &times;\n                </button>\n            </div>\n\n            <div className=\"modal-body\">\n                <input type=\"text\" \n                    className=\"form-control\" \n                    value={description}\n                    onChange={e => setDescription(e.target.value)}>\n                </input>\n            </div>\n\n            <div className=\"modal-footer\">\n                <button type=\"button\" \n                    className=\"btn btn-warning\" \n                    data-dismiss=\"modal\"\n                    onClick={e => updateDescription(e)}>\n                    Edit\n                </button>\n                <button type=\"button\" className=\"btn btn-danger\" \n                data-dismiss=\"modal\" \n                onClick={() => setDescription(todo.description)}>\n                    Close\n                </button>\n            </div>\n\n            </div>\n            </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default EditTodo;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = ({ todos: todos, getTodos: getTodos, setTodos=setTodos }) => {\n    // State and what you are using to change the state\n    // const[todos, setTodos] = useState([todos]);\n\n    // Delete function\n    const deleteTodo = async(id, description) => {\n        try {\n            const deleteTodo = await fetch(`/api/todos/${id}`, {\n                 method: \"DELETE\"\n            });\n            setTodos(todos.filter(todo => \n                todo.todo_id !== id\n            ));\n            toast.warning(\"Deleted todo \\\"\" + description + \"\\\"\");\n\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        // every refresh render, execute these functions\n        getTodos();\n    }, [todos]);\n    \n    return (\n        <Fragment>\n            <table className=\"table mt-5 text-center\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Edit</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {todos.map(todo => (\n                        <tr key={todo.todo_id}>\n                            <td>{todo.description}</td>\n                            <td><EditTodo todo={todo} /></td>\n                            <td><button className=\"btn btn-danger\" onClick={() => deleteTodo(todo.todo_id, todo.description)}>Delete</button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </Fragment>\n    );\n}\n\nexport default ListTodos;","import React, { useEffect, useState } from \"react\";\nimport InputTodo from \"../components/InputTodo\";\nimport ListTodos from \"../components/ListTodos\";\n\n\nconst Todos = () => {\n    // State and what you are using to change the state\n    const[todos, setTodos] = useState([]);\n\n    const getTodos = async() => {\n        try {\n            // grab data from server, fetch is a get request\n            const response = await fetch(\"/api/todos\");\n            // Have to parse because receiving json data\n            const jsonData = await response.json();\n            // Set the state of todos on the client side to whatever was fetched during the first render\n            setTodos(jsonData);\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        // every refresh render, execute these functions\n        getTodos();\n    }, []);\n\n    return (<div className=\"container\">\n                <InputTodo />\n                <ListTodos todos={todos} getTodos={getTodos} setTodos={setTodos} />\n            </div>);\n\n};\n\nexport default Todos;","import React, { useState, useEffect, useContext } from \"react\";\nimport ROUTES from \"./Routes\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport { UserContext } from \"../utils/UserProvider\";\nimport Todos from \"../pages/Todos\";\n\nconst PrivateRoute = (props) => {\n    const { username, token } = useContext(UserContext);\n\n    // const [auth, setAuth] = useState(null);\n\n    // useEffect(() => {\n    //     if(username && token) {\n    //         setAuth({ username, token });\n    //         // console.log(auth);\n    //     }\n    // }, [username, token]);\n\n    const isAuthenticated = () => username != null && token != null;\n\n    return (\n        <Route {...props} render={props => \n            isAuthenticated() ? (\n                                <Switch>\n                                    <Route exact path={ROUTES.TODOLIST}><Todos /></Route>\n                                </Switch>)\n                            : (<Redirect to={ROUTES.LOGIN} />)\n        } />\n    );\n}\n\nexport default PrivateRoute;","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport ROUTES from \"./Routes\";\n\nimport Register from \"../pages/Register\";\nimport Login from \"../pages/Login\";\n// import Todos from \"../pages/Todos\";\nimport PublicRoute from \"./PublicRoute\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst AppRouter = () => {\n    return (\n        <Fragment>\n            <ToastContainer />\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Redirect to={ROUTES.LOGIN} />} />\n                    <PublicRoute path={ROUTES.REGISTER} exact={true} component={Register} />\n                    <PublicRoute path={ROUTES.LOGIN} exact={true} component={Login} />\n                    <PrivateRoute path={ROUTES.TODOLIST} />\n                </Switch>\n            </BrowserRouter>\n        </Fragment>\n    )\n}\n\nexport default AppRouter;","import React, { Fragment } from 'react';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Components\nimport UserProvider from './utils/UserProvider';\nimport AppRouter from './routes/AppRouter';\n\nfunction App() {\n  return (\n  <div>\n    <UserProvider>\n       <AppRouter />\n    </UserProvider>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// All frontend routes\nconst ROUTES = {\n    LOGIN: \"/login\",\n    REGISTER: \"/register\",\n    TODOLIST: \"/todo-list\",\n    HOME: \"/\"\n};\n\nmodule.exports = ROUTES;"],"sourceRoot":""}