{"version":3,"sources":["components/InputTodo.js","components/EditTodo.js","components/ListTodos.js","App.js","index.js"],"names":["InputTodo","useState","description","setDescription","onSubmitForm","e","a","preventDefault","body","fetch","method","headers","JSON","stringify","window","location","console","error","message","className","onSubmit","type","value","onChange","target","EditTodo","todo","updateDescription","todo_id","data-toggle","data-target","id","onClick","data-dismiss","ListTodos","todos","setTodos","deleteTodo","filter","log","getTodos","response","json","jsonData","useEffect","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3ce21db.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\nconst InputTodo = () => {\n\n    // description here is the state\n    // setDescription is the only way to change to state\n    // useState give the state a default value\n    const [description, setDescription] = useState(\"\");\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n            // client input texts\n            const body = { description };\n            \n            // Convert description input from the client side\n            // into something that we can POST\n            // When user click \"Add\" button the POST requests fires off\n            // and a task is added into our PSQL database\n            const response = await fetch(\"http://localhost:5000/todos\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n            window.location = \"/\";\n        } catch(err) {\n            console.error(err.message);\n        }\n    };\n\n    // onChange here allows changing of input inside textbox\n    return (\n    <Fragment>\n        <h1 className=\"text-center mt-5\">Input Todo</h1>\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n            <input \n            type=\"text\" \n            className=\"form-control\" \n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            />\n            <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment> \n    );\n};\n\nexport default InputTodo;","import React, { Fragment, useState } from \"react\";\n\n// Must DESTRUCTURE the prop\n// For each todo, return a unique edit button\n// that reveals a modal when clicked\nconst EditTodo = ({ todo }) => {\n    const [description, setDescription] = useState(todo.description);\n\n    // Edit description function\n    const updateDescription = async(e) => {\n        // Prevent reload of browser before function call on click\n        e.preventDefault();\n        try {\n            const body = { description };\n            const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            window.location = \"/\";\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n    return (\n        <Fragment>\n            <button type=\"button\" className=\"btn btn-warning\" \n            data-toggle=\"modal\" \n            data-target={`#id${todo.todo_id}`}>\n                Edit\n            </button>\n            {/* Put onClick within the div with className modal for any additional functionality\n            you want to have when you click outside the modal*/}\n            <div className=\"modal\" id={`id${todo.todo_id}`} onClick={() => setDescription(todo.description)}>\n            <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n\n            <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Edit Todo</h4>\n                <button type=\"button\" \n                    className=\"close\" \n                    data-dismiss=\"modal\"\n                    onClick={() => setDescription(todo.description)}    >\n                    &times;\n                </button>\n            </div>\n\n            <div className=\"modal-body\">\n                <input type=\"text\" \n                    className=\"form-control\" \n                    value={description}\n                    onChange={e => setDescription(e.target.value)}>\n                </input>\n            </div>\n\n            <div className=\"modal-footer\">\n                <button type=\"button\" \n                    className=\"btn btn-warning\" \n                    data-dismiss=\"modal\"\n                    onClick={e => updateDescription(e)}>\n                    Edit\n                </button>\n                <button type=\"button\" className=\"btn btn-danger\" \n                data-dismiss=\"modal\" \n                onClick={() => setDescription(todo.description)}>\n                    Close\n                </button>\n            </div>\n\n            </div>\n            </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default EditTodo;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = () => {\n    // State and what you are using to change the state\n    const[todos, setTodos] = useState([]);\n\n    // Delete function\n    const deleteTodo = async(id) => {\n        try {\n            const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n                 method: \"DELETE\"\n            });\n            setTodos(todos.filter(todo => \n                todo.todo_id !== id\n            ));\n            console.log(todos);\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n\n    const getTodos = async() => {\n        try {\n            // grab data from server, fetch is a get request\n            const response = await fetch(\"http://localhost:5000/todos\");\n            // Have to parse because receiving json data\n            const jsonData = await response.json();\n            // Set the state of todos on the client side to whatever was fetched during the first render\n            setTodos(jsonData);\n            console.log(\"EXECUTED!!! GET\");\n        } catch(err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        // every refresh render, execute these functions\n        getTodos();\n    }, []);\n\n    return (\n        <Fragment>\n            <table className=\"table mt-5 text-center\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Edit</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {todos.map(todo => (\n                        <tr key={todo.todo_id}>\n                            <td>{todo.description}</td>\n                            <td><EditTodo todo={todo} /></td>\n                            <td><button className=\"btn btn-danger\" onClick={() => deleteTodo(todo.todo_id)}>Delete</button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </Fragment>\n    );\n}\n\nexport default ListTodos;","import React, { Fragment } from 'react';\nimport './App.css';\n\n// Components\nimport InputTodo from \"./components/InputTodo\";\nimport ListTodos from \"./components/ListTodos\";\n\nfunction App() {\n  return (\n  <Fragment>\n    <div className=\"container\">\n      <InputTodo />\n      <ListTodos />\n    </div>\n  </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}